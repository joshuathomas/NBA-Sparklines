<!DOCTYPE html>
<html>
    <head>
        <script src="plotly_02_01_2020.min.js"></script>
        <script src="jquery-3.4.1.min.js"></script>
        <!--
        
        -->
    </head>
    <style>
        .lf{
            float: left;
            color: #444;
            font-family: 'Roboto Condensed', 'Helvetica', 'Arial', sans-serif;
            font-size: 10pt;
            vertical-align: middle;
        }
        #game_text{
            margin-top: 20px;
            margin-right: 100px;
        }
        .main_dynamic_wrapper{
            float: left;
            height: 300px;
        }
        .large_txt{
            font-size: 18pt;
            font-weight: bold;
        }
        .score_txt{
            font-size: 30pt;
            font-weight: bolder;
        }
        .modebar{
      display: none !important;
}

    </style>
    <body>
        <!-- dynamically dropping -->
        <div id="wrapper">
            <!--
            <div id="game_info" class="lf"></div>
            <div id="game_side" class="lf"></div>
            -->
        </div>


    </body>

    <script>
        //
        // https://towardsdatascience.com/pretending-to-know-about-the-nba-using-python-699177a58685
        // this was the article that got the whole thing going
        //
        var jsonFileRootDir = "./nba_json_data/";
        //
        // https://stackoverflow.com/questions/10893613/how-can-i-convert-time-to-decimal-number-in-javascript
        //
        function timeStringToFloat(time)
        {
            var minSecTenths = time.split(/[.:]/);
            var min = parseInt(minSecTenths[0], 10);
            var sec = parseInt(minSecTenths[1], 10);
            var tenths = minSecTenths[2] ? parseInt(minSecTenths[1], 10) : 0;
            
            //you only want to go to 4 decimal places
            return (min + ( sec / 60 ) + ( tenths / 600 )).toFixed(4);
        }// end timeStringToFloat

        //
        //
        //
        function printOutQuarterScore(qScore, boxScore)
        {
            var qCurrentScore = qScore[0].plays;
            var xVal = new Array();
            var yVal = new Array();
            
            qCurrentScore.forEach(function(value, index){
                //make the number negative - the values you receive are counting down to 0
                xVal.push(-timeStringToFloat(value.clock));

                if(value.leadTeamId == boxScore.basicGameData.hTeam.teamId){
                    //additionally, the home team's lead will push downwards on the graph 
                    yVal.push(parseInt("-" + value.points));
                }
                else{
                    yVal.push(parseInt(value.points));
                }
            });
            return [xVal, yVal];

        }//end printOutQuarterScore
        //
        //
        //
        function combineQuarters(q1, q2, q3, q4){

            //-36, 24, -12, 0 - then place in their own array
            var allQ_X = new Array();
            var allQ_Y = new Array();
            //this is bad form but, I want it done without trying to think through 'the best way' to do it
   
            q1[0].forEach(function(value, index){
                allQ_X.push(value - 36);
                allQ_Y.push(q1[1][index])
            });
            q2[0].forEach(function(value, index){
                allQ_X.push(value - 24);
                allQ_Y.push(q2[1][index])
            });
            q3[0].forEach(function(value, index){
                allQ_X.push(value - 12);
                allQ_Y.push(q3[1][index])
            });
            q4[0].forEach(function(value, index){
                allQ_X.push(value);
                allQ_Y.push(q4[1][index])
            });

            return [allQ_X, allQ_Y];
        }
        //
        //this could be a query string parameter at some point
        //you should also set a variable for the url base - local - dev - and production/live http://data.nba.net/prod/v1/ or http://localhost/nba/
        //
        var requestDate = "20200131";
        //
        //
        //
        var scoreboardRequest = $.ajax(jsonFileRootDir + "scoreboard_" + requestDate + ".json").done(
            
            function(data, textStatus, jqXHR)
            {
                data.games.forEach(function(value, index){
                    
                    var gameIdNumb = value.gameId;

                    //uncomment the following if statement to display only one game rather than all in the array [all games from a certain date]
                    //if(index == 1){

                        var gameBoxScore;

                        var gameBoxScoreRequest = $.ajax(jsonFileRootDir + gameIdNumb + "_boxscore.json", {}).done(function(data){});

                        gameBoxScoreRequest.then(function(data){

                            gameBoxScore = data;
                            
                            // ---------------------------------------------------------------
                            // 
                            // ---------------------------------------------------------------
                            var q1Request = $.ajax(jsonFileRootDir + gameIdNumb + "_lead_tracker_1.json").done(function(data){});
                            var q2Request = $.ajax(jsonFileRootDir + gameIdNumb + "_lead_tracker_2.json").done(function(data){});
                            var q3Request = $.ajax(jsonFileRootDir + gameIdNumb + "_lead_tracker_3.json").done(function(data){});
                            var q4Request = $.ajax(jsonFileRootDir + gameIdNumb + "_lead_tracker_4.json").done(function(data){});
                            // ---------------------------------------------------------------
                            // 
                            // ---------------------------------------------------------------
                        
                        
                            $.when(q1Request, q2Request, q3Request, q4Request)
                            .done(                           
                                function(q1Obj, q2Obj, q3Obj, q4Obj){

                                    //console.log("Q1 -----------------------------");
                                    var q1XY = printOutQuarterScore(q1Obj, gameBoxScore);
                                    //console.log("Q2 -----------------------------");
                                    var q2XY = printOutQuarterScore(q2Obj, gameBoxScore);
                                    //console.log("Q3 -----------------------------");
                                    var q3XY = printOutQuarterScore(q3Obj, gameBoxScore);
                                    //console.log("Q4 -----------------------------");
                                    var q4XY = printOutQuarterScore(q4Obj, gameBoxScore);

                                    
                                    var wholeGameArray = combineQuarters(q1XY, q2XY, q3XY, q4XY)

                                    //I forgot all about overtime!!!!!!!!!!!
                                    //you'll have to write new methods and tweak the chart UI for cases of OT


                                    GAMEDIVQ1 = document.getElementById('gameQ1');
                                    GAMEDIVQ2 = document.getElementById('gameQ2');
                                    GAMEDIVQ3 = document.getElementById('gameQ3');
                                    GAMEDIVQ4 = document.getElementById('gameQ4');
                                    

                                    //
                                    // set the range for games where the score moves beyond a certain threshold
                                    //
                                    var yRange = new Array();

                                    if(wholeGameArray[1].every(x => x < 25 && x > -25)){
                                        yRange = [-25, 25]
                                    }
                                    else if(wholeGameArray[1].every(x => x < 35 && x > -35)){
                                        yRange = [-35, 35]
                                    }
                                    else if(wholeGameArray[1].every(x => x < 45 && x > -45)){
                                        yRange = [-45, 45]
                                    }
                                    else{
                                        yRange = [-70, 70]
                                    }
                                    /*
                                    console.log(
                                        wholeGameArray[1].every(function(val, i, arr){
                                            return val < 25 && val > -25;
                                    }));
                                    */
                                    
                                    //
                                    // https://plot.ly/javascript/reference/#layout
                                    //
                                    var layout = {
                                        
                                        xaxis: {
                                            //range: [-48, 0],
                                            range: [-49, 1],
                                            //xref: "container",
                                            // lines at -36, -24, -12
                                            zeroline: false,
                                            showgrid: true,
                                            //autotick: true,
                                            //tick0: -48,
                                            //dtick: 12,
                                            tickmode: "array",
                                            tickvals: [-36, -24, -12],
                                            showticklabels: false,
                                            //layer: "below traces"
                                            
                                        },
                                        yaxis: {
                                            range: yRange,
                                            rangemode: "match",
                                            showticklabels: false,
                                            type: "linear", //  "-" | "linear" | "log" | "date" | "category" | "multicategory"
                                            //autorange: false,
                                            
                                            //fixedrange: true,
                                            //constraintoward: "center",
                                            //constrain: "domain",
                                            

                                            dtick: 10,                                        
                                            zerolinewidth: 3,
                                            //autotick: false,
                                            showgrid: true,
                                            //layer: "below traces"
                                        },
                                        margin: {
                                            l: 0, //number
                                            t: 20,
                                            b: 0,
                                            pad: 0,
                                            autoexpand: false, //boolean
                                        }
                                    };

                                    
                                    var holderDIV = $('<div/>', {
                                        'class':'main_dynamic_wrapper',
                                        'id': 'holder_for_' + gameIdNumb
                                    });
                                    //
                                    //append this wrapper
                                    //
                                    $("#wrapper").append(holderDIV);

                                    var chartDIV = $('<div/>', {
                                        'id':'chart_for_' + gameIdNumb,
                                        'class':'lf',
                                        'style': "width:400px;height:200px;",
                                        //'html':"<div id='game" + gameIdNumb + "_info'></div>",
                                        //'click':function(){ },
                                        //'mouseenter':function(){ },
                                        //'mouseleave':function(){ }
                                    }).appendTo(holderDIV);
                                    //}).appendTo("#game_info");

                                    
                                    
                                    //https://stackoverflow.com/questions/4069982/document-getelementbyid-vs-jquery
                                    Plotly.newPlot( chartDIV[0], [{
                                        x: wholeGameArray[0],
                                        y: wholeGameArray[1],
                                        //cliponaxis: false, //default: true
                                        mode: 'lines',//'lines+markers',
                                        marker: {
                                            //color: 'rgb(128, 0, 128)',
                                            size: 3
                                        },
                                        line: {
                                            //color: 'rgb(128, 0, 128)',
                                            width: 2
                                        }   
                                    }], layout );

                                    

                                //console.log(gameBoxScore);

                                //"#game" + gameIdNumb + "_info"
                                
                                    
                                
                                var gameScoreHTML = $("<div class='lf' id='game_text'>" +
                                    "<img src='.\/nba_logo_team_svg\/" + gameBoxScore.basicGameData.vTeam.triCode + "_logo.svg' style='width:70px;height:70px;' \/>" +
                                    "<span class='large_txt'>" + gameBoxScore.basicGameData.vTeam.triCode + "<\/span> (" + gameBoxScore.basicGameData.vTeam.win + "-" +
                                    gameBoxScore.basicGameData.vTeam.loss + ") " + "<span class='score_txt'>" + gameBoxScore.basicGameData.vTeam.score + "<\/span>"
                                    
                                    + "<br \/>@<br \/>" +
                                    //gameBoxScore.basicGameData.hTeam.teamId
                                    "<img src='.\/nba_logo_team_svg\/" + gameBoxScore.basicGameData.hTeam.triCode + "_logo.svg' style='width:70px;height:70px;' \/>" +
                                    "<span class='large_txt'>" + gameBoxScore.basicGameData.hTeam.triCode + "<\/span> (" + gameBoxScore.basicGameData.hTeam.win + "-" +
                                    gameBoxScore.basicGameData.hTeam.loss + ") " + "<span class='score_txt'>" + gameBoxScore.basicGameData.hTeam.score + "<\/span>"
                                    + "<br />" + 
                                    
                                    //gameBoxScore.basicGameData.nugget.text
                                    + "</div>"
                                );
                                //$("#game_info").append(gameScoreHTML);
                                holderDIV.append(gameScoreHTML);
                                

                            });//end when request for each quarter
                        });//gameBoxScoreRequest then finished
                    //}//end if statement for index
            });//end gameIds each function


        
        });//end fetch response
        
        


    </script>
    
</html>