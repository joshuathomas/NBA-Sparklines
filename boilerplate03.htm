<!DOCTYPE html>
<html>
    <head>
        <script src="plotly_02_01_2020.min.js"></script>
        <script src="jquery-3.4.1.min.js"></script>
        <!--
        
        -->
    </head>
    <style>
        .lf{
            float: left;
        }
    </style>
    <body>
        <!-- this should be the smaller version -->
        <div id="game_info"></div>
        <div>
            <div id="gameQ1" class="lf" style="width:300px;height:600px;"></div>
            <div id="gameQ2" class="lf" style="width:300px;height:600px;"></div>
            <div id="gameQ3" class="lf" style="width:300px;height:600px;"></div>
            <div id="gameQ4" class="lf" style="width:300px;height:600px;"></div>
        </div>

    </body>

    <script>
        //
        // https://stackoverflow.com/questions/10893613/how-can-i-convert-time-to-decimal-number-in-javascript
        //
        function timeStringToFloat(time)
        {
            var minSecTenths = time.split(/[.:]/);
            var min = parseInt(minSecTenths[0], 10);
            var sec = parseInt(minSecTenths[1], 10);
            var tenths = minSecTenths[2] ? parseInt(minSecTenths[1], 10) : 0;
            
            //you only want to go to 4 decimal places
            return (min + ( sec / 60 ) + ( tenths / 600 )).toFixed(4);
        }// end timeStringToFloat

        //
        //
        //
        function printOutQuarterScore(qScore, boxScore)
        {
            var qCurrentScore = qScore[0].plays;
            var xVal = new Array();
            var yVal = new Array();
            
            qCurrentScore.forEach(function(value, index){
                //make the number negative - the values you receive are counting down to 0
                xVal.push(-timeStringToFloat(value.clock));

                if(value.leadTeamId == boxScore.basicGameData.hTeam.teamId){
                    //additionally, the home team's lead will push downwards on the graph 
                    yVal.push(parseInt("-" + value.points));
                }
                else{
                    yVal.push(parseInt(value.points));
                }
            });
            return [xVal, yVal];

        }//end printOutQuarterScore
        //
        //
        //
        function combineQuarters(q1, q2, q3, q4){

            //-36, 24, -12, 0 - then place in their own array
            var allQ_X = new Array();
            var allQ_Y = new Array();
            //this is bad form but, I want it done without trying to think through 'the best way' to do it
            //we're working backwards here
   
            q1[0].forEach(function(value, index){
                //console.log("val:" + value + " ind:" + index + " other val:" + q1[1][index]);
                allQ_X.push(value - 36);
                allQ_Y.push(q1[1][index])
            });
            q2[0].forEach(function(value, index){
                allQ_X.push(value - 24);
                allQ_Y.push(q2[1][index])
            });
            q3[0].forEach(function(value, index){
                allQ_X.push(value - 12);
                allQ_Y.push(q3[1][index])
            });
            q4[0].forEach(function(value, index){
                allQ_X.push(value);
                allQ_Y.push(q4[1][index])
            });
            //console.log([allQ_X, allQ_Y]);

            return [allQ_X, allQ_Y];
        }
        //
        //this could be a query string parameter at some point
        //you could also set a variable for the url base - local - dev - and production/live http://data.nba.net/prod/v1/
        //
        var requestDate = "20200131";
        //
        //
        //
        var scoreboardRequest = $.ajax("./nba_json_data/scoreboard_" + requestDate + ".json").done(
            //function(response)
            function(data, textStatus, jqXHR)
            {
                data.games.forEach(function(value, index){
                    
                    var gameIdNumb = value.gameId;

                    //just so we're not printing them all out
                    if(index == 6){

                        var gameBoxScore;

                        var gameBoxScoreRequest = $.ajax("./nba_json_data/" + gameIdNumb + "_boxscore.json", {}).done(function(data){});

                        gameBoxScoreRequest.then(function(data){

                            gameBoxScore = data;
                            
                            // ---------------------------------------------------------------
                            // 
                            // ---------------------------------------------------------------
                            var q1Request = $.ajax("./nba_json_data/" + gameIdNumb + "_lead_tracker_1.json").done(function(data){});
                            var q2Request = $.ajax("./nba_json_data/" + gameIdNumb + "_lead_tracker_2.json").done(function(data){});
                            var q3Request = $.ajax("./nba_json_data/" + gameIdNumb + "_lead_tracker_3.json").done(function(data){});
                            var q4Request = $.ajax("./nba_json_data/" + gameIdNumb + "_lead_tracker_4.json").done(function(data){});
                            // ---------------------------------------------------------------
                            // 
                            // ---------------------------------------------------------------
                        
                        
                            $.when(q1Request, q2Request, q3Request, q4Request)
                            .done(                           
                                function(q1Obj, q2Obj, q3Obj, q4Obj){

                                    //console.log("Q1 -----------------------------");
                                    var q1XY = printOutQuarterScore(q1Obj, gameBoxScore);
                                    //console.log("Q2 -----------------------------");
                                    var q2XY = printOutQuarterScore(q2Obj, gameBoxScore);
                                    //console.log("Q3 -----------------------------");
                                    var q3XY = printOutQuarterScore(q3Obj, gameBoxScore);
                                    //console.log("Q4 -----------------------------");
                                    var q4XY = printOutQuarterScore(q4Obj, gameBoxScore);

                                    //ok, these are the arrays
                                    //you want to build one super array from all these indivdual quarter arrays
                                    //in the future possible overtime which would not count down to zero
                                    console.log(q1XY);
                                    var wholeGameArray = combineQuarters(q1XY, q2XY, q3XY, q4XY)

                                    //I forgot all about overtime!!!!!!!!!!!
                                    //you'll have to write new methods and a UI for cases of OT


                                    GAMEDIVQ1 = document.getElementById('gameQ1');
                                    GAMEDIVQ2 = document.getElementById('gameQ2');
                                    GAMEDIVQ3 = document.getElementById('gameQ3');
                                    GAMEDIVQ4 = document.getElementById('gameQ4');

                                    var layout = {
                        
                                        xaxis: {
                                            range: [-48, 0],
                                            zeroline: false,
                                            showgrid: false
                                        },
                                        yaxis: {
                                            range: [-25, 25],
                                            showticklabels: false,
                                            type: "linear", //  "-" | "linear" | "log" | "date" | "category" | "multicategory"
                                            autorange: false,
                                            dtick: 5,                                        
                                            zerolinewidth: 4,
                                            autotick: false,
                                            showgrid: true
                                        }
                                    };
                                    //console.log(q1XY[0]);
                                    //console.log(q1XY[1]);

                                    Plotly.newPlot( GAMEDIVQ1, [{
                                        x: q1XY[0],
                                        y: q1XY[1] }], layout );

                                    Plotly.newPlot( GAMEDIVQ2, [{
                                        x: q2XY[0],
                                        y: q2XY[1] }], layout );
                                    
                                    Plotly.newPlot( GAMEDIVQ3, [{
                                        x: q3XY[0],
                                        y: q3XY[1] }], layout );

                                    Plotly.newPlot( GAMEDIVQ4, [{
                                        x: q4XY[0],
                                        y: q4XY[1] }], layout );
                                    
                                $('#game_info').text(
                                    gameBoxScore.basicGameData.vTeam.triCode + " (" + gameBoxScore.basicGameData.vTeam.win + "-" +
                                    gameBoxScore.basicGameData.vTeam.loss + ") " + gameBoxScore.basicGameData.vTeam.score
                                    + " at " +
                                    //gameBoxScore.basicGameData.hTeam.teamId
                                    gameBoxScore.basicGameData.hTeam.triCode + " (" + gameBoxScore.basicGameData.hTeam.win + "-" +
                                    gameBoxScore.basicGameData.hTeam.loss + ") " + gameBoxScore.basicGameData.hTeam.score
                                );

                            });//end when request for each quarter
                        });//gameBoxScoreRequest then finished
                    }//end if statement for index
            });//end gameIds each function


        
        });//end fetch response
        
        


    </script>
    
</html>